// lexer should skip this &???//%#@
class Program is
    this() is
        super()
        var some_int: Integer := 123
        var some_real: Real := 1.000
        if true.Equals(false) then Pipe().WriteLn("Punks not dead") end
        var list: List[Integer] := List[Integer]()
        list.Add(1)
        list.Assign(0, 2)
    end
    Integer[OMG, GENERIC_INTEGER[WITH_GENERICS_INSIDE]] DoSomething(List[Integer]: some_list, Str: some_str) is
        your_machine.timur.consume(environment.collect(ram.full, cpu.blow_up_value, 1, true, false, 3.14, "eternity", 3.14.Plus(0.86)))
        if some_int.Equals(123) then
            Pipe().WriteLn("Hello World!")
        else if true then
            lal()
        else if false then
            lel()
        else
            Pipe().WriteLn("123 != 123")
        end
        while some_int.Equals(124).Not() loop
            Pipe().WriteLn(some_int.ToString())
        end
        return this.list
    end
    var list: List[Integer]
end

class MyClass extends Default is
    this() is end // this is end :(

    MyClass Default() is
        return this()
    end
end
// lexer should skip this &???//%#@
